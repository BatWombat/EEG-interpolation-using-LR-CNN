import pandas as pd
from sklearn.model_selection import cross_val_score, cross_val_predict
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import numpy as np
import matplotlib.pyplot as plt

data = pd.read_csv("Plausible_N400.csv")

cols = ["FC1", "FC2", "CP1", "CP2"]
X = data[cols]
y = data["Cz"]
n_splits = 10
timestamps = data["Timestamp"]

model = LinearRegression()

y_pred = cross_val_predict(model, X, y, cv=n_splits)
mse_score = np.sqrt(-cross_val_score(model, X, y, cv=n_splits, scoring='neg_mean_squared_error').mean())

print("MSE score of {}-fold-cross-validation linear regression: {}".format(n_splits, mse_score))

sort_idx = np.argsort(timestamps)
x_sorted = timestamps[sort_idx]
y_pred_sorted = y_pred[sort_idx]

unique_x, idx = np.unique(x_sorted, return_index=True)

mean_y = []
for i in range(len(unique_x)):
    if i < len(unique_x) - 1:
        mean_y.append(np.mean(y_pred_sorted[idx[i]:idx[i+1]]))
    else:
        mean_y.append(np.mean(y_pred_sorted[idx[i]:]))

plt.scatter(timestamps, y, label='True values', s=0.2)
plt.plot(unique_x, mean_y, label='Mean predicted values', color='r')
plt.legend()
plt.show()
