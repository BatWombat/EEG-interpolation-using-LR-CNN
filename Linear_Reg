import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import KFold, cross_val_score
from sklearn.metrics import mean_squared_error

condition_baseline = data[data['Condition'] =='baseline']
cols = ["FC2", "FC6", "CP2", "CP6"]
X = condition_baseline[cols]
y = condition_baseline["C4"]

n_splits = 4
kf = KFold(n_splits=n_splits)

mse_scores = []
lr = LinearRegression()

for train_index, val_index in kf.split(X):
    # split the data into training and validation sets
    X_train, X_val = X.iloc[train_index], X.iloc[val_index]
    y_train, y_val = y.iloc[train_index], y.iloc[val_index]

    # fit the linear regression model on the training set
    lr.fit(X_train, y_train)

    # predict on the validation set and compute the mean squared error
    y_pred = lr.predict(X_val)
    R2_score = lr.score(X_val, y_val)
    cv_score = cross_val_score(lr, X_val, y_val, scoring = "r2")
    
mse_scores.append(cv_score.mean())
print("R^2 score : {}, Final CV Score: {}".format(R2_score, np.mean(mse_scores)))
