import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

data_2021 = pd.read_csv("Baseline_N400.csv")

cols = ["FC1", "FC2", "CP1", "CP2"]
X = data_2021[cols]
y = data_2021["Cz"]

degree = 2

poly = PolynomialFeatures(degree = degree)
X_poly = poly.fit_transform(X)
model = LinearRegression()
model.fit(X_poly, y)
    

    


data_2019 = pd.read_csv('2019_Control_N400.csv')
X_2019 = data_2019[cols]
y_2019 = pd.DataFrame(data_2019['Cz']) 
timestamps = data_2019["Timestamp"]

X_poly_2019 = poly.transform(X_2019)
y_pred = model.predict(X_poly_2019)
    
mse = mean_squared_error(y_2019, y_pred)
print('MSE score:', mse)
   
actual_means = y_2019.groupby(timestamps).mean()
pred_means = pd.Series(y_pred, index = y_2019.index).groupby(timestamps).mean()


plt.plot(actual_means.index, actual_means.values, label="Actual")
plt.plot(pred_means.index, pred_means.values, label="Predicted", c = "r")
plt.legend()
plt.xlabel("Timestamp")
plt.ylabel("Mean Cz value")
plt.show()
